<Window x:Name="WindowConfigurationDialog" x:Class="ObsGw2Plugin.Gw2PluginConfigurationDialog"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             mc:Ignorable="d" ResizeMode="NoResize" Height="393" Width="590" Title="Guild Wars 2 Info Configuration" WindowStartupLocation="CenterScreen" TextOptions.TextFormattingMode="Display" TextOptions.TextHintingMode="Fixed">

    <Grid>
        <Button x:Name="buttonOK" Content="OK" Margin="0,0,90,10" VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="75" Click="buttonOK_Click" />
        <Button x:Name="buttonCancel" Content="Cancel" Margin="0,0,10,10" VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="75" Click="buttonCancel_Click" IsCancel="True" />
        <GroupBox Header="Text format" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" Height="68" Width="555">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <TextBox x:Name="textBoxTextFormat" VerticalAlignment="Center" Margin="0,0,5,0" TextChanged="textBoxTextFormat_TextChanged" Text="%char%"/>
                <ToggleButton x:Name="toggleButtonTextFormatInsert" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Center" Height="18px" Width="18px" Checked="toggleButtonTextFormatInsert_CheckedChanged" Unchecked="toggleButtonTextFormatInsert_CheckedChanged" ContextMenuOpening="toggleButtonTextFormatInsert_ContextMenuOpening" ContextMenuClosing="toggleButtonTextFormatInsert_ContextMenuClosing">
                    <Path Fill="Black" Data="M 0 0 L 0 3 L 1 4 L 0 5 L 0 8 L 4 4 Z"/>
                    <ToggleButton.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Character info">
                                <MenuItem Header="Character name" InputGestureText="%char%" Click="toggleButtonTextFormatInsertMenuItem_Click"/>
                                <MenuItem Header="Profession name" InputGestureText="%prof%" Click="toggleButtonTextFormatInsertMenuItem_Click"/>
                                <MenuItem Header="Race name (custom defined)" InputGestureText="%race%" Click="toggleButtonTextFormatInsertMenuItem_Click"/>
                                <MenuItem Header="Advanced">
                                    <MenuItem Header="Profession id" InputGestureText="%profid%" Click="toggleButtonTextFormatInsertMenuItem_Click"/>
                                    <MenuItem Header="Is commander" InputGestureText="%comm%" Click="toggleButtonTextFormatInsertMenuItem_Click"/>
                                </MenuItem>
                            </MenuItem>
                            <MenuItem Header="Game type info">
                                <MenuItem Header="Game type" InputGestureText="%gametype%" Click="toggleButtonTextFormatInsertMenuItem_Click"/>
                                <MenuItem Header="PvP team" InputGestureText="%pvpteam%" Click="toggleButtonTextFormatInsertMenuItem_Click"/>
                                <MenuItem Header="WvW team" InputGestureText="%wvwteam%" Click="toggleButtonTextFormatInsertMenuItem_Click"/>
                                <MenuItem Header="Advanced">
                                    <MenuItem Header="Game type id" InputGestureText="%gametypeid%" Click="toggleButtonTextFormatInsertMenuItem_Click"/>
                                </MenuItem>
                            </MenuItem>
                            <MenuItem Header="Location info">
                                <MenuItem Header="Map name" InputGestureText="%map%" Click="toggleButtonTextFormatInsertMenuItem_Click"/>
                                <MenuItem Header="Continent name" InputGestureText="%cont%" Click="toggleButtonTextFormatInsertMenuItem_Click"/>
                                <MenuItem Header="Closest waypoint name" InputGestureText="%wp%" Click="toggleButtonTextFormatInsertMenuItem_Click"/>
                                <MenuItem Header="Closest PoI name" InputGestureText="%poi%" Click="toggleButtonTextFormatInsertMenuItem_Click"/>
                                <MenuItem Header="Closest waypoint/PoI name" InputGestureText="%wppoi%" Click="toggleButtonTextFormatInsertMenuItem_Click"/>
                                <MenuItem Header="Advanced">
                                    <MenuItem Header="Map id" InputGestureText="%mapid%" Click="toggleButtonTextFormatInsertMenuItem_Click"/>
                                    <MenuItem Header="Continent id" InputGestureText="%contid%" Click="toggleButtonTextFormatInsertMenuItem_Click"/>
                                    <MenuItem Header="Closest waypoint id" InputGestureText="%wpid%" Click="toggleButtonTextFormatInsertMenuItem_Click"/>
                                    <MenuItem Header="Closest PoI id" InputGestureText="%poiid%" Click="toggleButtonTextFormatInsertMenuItem_Click"/>
                                    <MenuItem Header="Closest waypoint/PoI id" InputGestureText="%wppoiid%" Click="toggleButtonTextFormatInsertMenuItem_Click"/>
                                    <Separator/>
                                    <MenuItem Header="X-coord (map)" InputGestureText="%x%" Click="toggleButtonTextFormatInsertMenuItem_Click"/>
                                    <MenuItem Header="Y-coord (map)" InputGestureText="%y%" Click="toggleButtonTextFormatInsertMenuItem_Click"/>
                                    <MenuItem Header="Z-coord (map)" InputGestureText="%z%" Click="toggleButtonTextFormatInsertMenuItem_Click"/>
                                    <MenuItem Header="X-coord (continent)" InputGestureText="%cx%" Click="toggleButtonTextFormatInsertMenuItem_Click"/>
                                    <MenuItem Header="Y-coord (continent)" InputGestureText="%cy%" Click="toggleButtonTextFormatInsertMenuItem_Click"/>
                                    <MenuItem Header="Z-coord (continent)" InputGestureText="%cz%" Click="toggleButtonTextFormatInsertMenuItem_Click"/>
                                </MenuItem>
                            </MenuItem>
                            <MenuItem Header="Miscellaneous">
                                <MenuItem Header="Shard id" InputGestureText="%shard%" Click="toggleButtonTextFormatInsertMenuItem_Click"/>
                                <MenuItem Header="Server IP" InputGestureText="%ip%" Click="toggleButtonTextFormatInsertMenuItem_Click"/>
                                <MenuItem Header="Build number" InputGestureText="%build%" Click="toggleButtonTextFormatInsertMenuItem_Click"/>
                                <MenuItem Header="Percent sign (%)" InputGestureText="%%" Click="toggleButtonTextFormatInsertMenuItem_Click"/>
                            </MenuItem>
                        </ContextMenu>
                    </ToggleButton.ContextMenu>
                </ToggleButton>
                <CheckBox x:Name="checkBoxHideInactive" Grid.Row="1" Grid.ColumnSpan="2" VerticalAlignment="Center" Content="Hide text when Guild Wars 2 is not actively updating the Mumble Link" Margin="0,3" IsChecked="True"/>
            </Grid>
        </GroupBox>
        <GroupBox Header="Style" HorizontalAlignment="Left" Margin="10,83,0,0" VerticalAlignment="Top" Height="126" Width="350">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Label Content="Font:" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                <Grid Grid.Column="1" Margin="5,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="3*"/>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <ComboBox x:Name="comboBoxFontFamily" VerticalAlignment="Center" Margin="0,0,5,0"
                              xmlns:ComponentModel="clr-namespace:System.ComponentModel;assembly=WindowsBase" ItemTemplate="{DynamicResource FontTemplate}" IsEditable="True" SelectionChanged="comboBoxFontFamily_SelectionChanged">
                        <ComboBox.Resources>

                            <CollectionViewSource x:Key="myFonts" Source="{Binding Source={x:Static Fonts.SystemFontFamilies}}">
                                <CollectionViewSource.SortDescriptions>
                                    <ComponentModel:SortDescription PropertyName="Source" />
                                </CollectionViewSource.SortDescriptions>
                            </CollectionViewSource>

                            <Style x:Key="FontStyle">
                                <Setter Property="Control.FontFamily" Value="{Binding Source}" />
                            </Style>

                            <DataTemplate x:Key="FontTemplate">
                                <StackPanel VirtualizingStackPanel.IsVirtualizing="True">
                                    <TextBlock Style="{StaticResource FontStyle}"
                                       Text="{Binding Source}"
                                       ToolTip="{Binding Source}" />
                                </StackPanel>
                            </DataTemplate>

                        </ComboBox.Resources>

                        <ComboBox.SelectedItem>
                            <FontFamily>Arial</FontFamily>
                        </ComboBox.SelectedItem>
                        <ComboBox.SelectedValue>
                            <FontFamily>Arial</FontFamily>
                        </ComboBox.SelectedValue>

                        <ComboBox.ItemsSource>
                            <Binding Source="{StaticResource myFonts}" />
                        </ComboBox.ItemsSource>
                    </ComboBox>
                    <xctk:IntegerUpDown x:Name="integerUpDownFontSize" Grid.Column="1" VerticalAlignment="Center" Margin="5,0,0,0" Minimum="1" Value="48" ValueChanged="integerUpDownFontSize_ValueChanged"/>
                    <Label Content="pt" Grid.Column="2" HorizontalAlignment="Left" VerticalAlignment="Center" Padding="0" Margin="5,0"/>
                </Grid>
                <Label Content="Text color:" Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                <xctk:ColorPicker x:Name="colorPickerTextColor" Grid.Row="1" Grid.Column="1" VerticalAlignment="Center" Margin="5,0" DisplayColorAndName="True" ShowRecentColors="True" ShowAvailableColors="False" SelectedColor="White" SelectedColorChanged="colorPickerTextColor_SelectedColorChanged"/>
                <Label Content="Background color:" Grid.Row="2" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                <xctk:ColorPicker x:Name="colorPickerBackColor" Grid.Row="2" Grid.Column="1" VerticalAlignment="Center" Margin="5,0" DisplayColorAndName="True" ShowRecentColors="True" ShowAvailableColors="False" SelectedColor="Transparent" SelectedColorChanged="colorPickerBackColor_SelectedColorChanged"/>
                <Label Content="Text effects:" Grid.Row="3" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                <Grid Grid.Column="1" Grid.Row="3" Margin="5,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <CheckBox x:Name="checkBoxBold" Content="Bold" HorizontalAlignment="Left" VerticalAlignment="Center" Checked="checkBoxBold_CheckedChanged" Unchecked="checkBoxBold_CheckedChanged"/>
                    <CheckBox x:Name="checkBoxItalic" Grid.Column="1" Content="Italic" HorizontalAlignment="Left" VerticalAlignment="Center" Checked="checkBoxItalic_CheckedChanged" Unchecked="checkBoxItalic_CheckedChanged"/>
                    <CheckBox x:Name="checkBoxUnderline" Grid.Column="2" Content="Underline" HorizontalAlignment="Left" VerticalAlignment="Center" Checked="checkBoxUnderline_CheckedChanged" Unchecked="checkBoxUnderline_CheckedChanged"/>
                </Grid>
            </Grid>
        </GroupBox>
        <GroupBox HorizontalAlignment="Left" Margin="365,83,0,0" VerticalAlignment="Top" Height="74" Width="200">
            <GroupBox.Header>
                <CheckBox x:Name="checkBoxOutline" Content="Outline" IsChecked="True" Checked="checkBoxOutline_Checked" Unchecked="checkBoxOutline_Unchecked"/>
            </GroupBox.Header>
            <Grid IsEnabled="{Binding IsChecked, ElementName=checkBoxOutline}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Label Content="Color:" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                <xctk:ColorPicker x:Name="colorPickerOutlineColor" Grid.Column="1" VerticalAlignment="Center" Margin="5,0" DisplayColorAndName="True" ShowRecentColors="True" ShowAvailableColors="False" SelectedColorChanged="colorPickerOutlineColor_SelectedColorChanged"/>
                <Label Content="Thickness:" Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                <Grid Grid.Row="1" Grid.Column="1" Margin="5,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <xctk:DoubleUpDown x:Name="doubleUpDownOutlineThickness" VerticalAlignment="Center" Margin="0" Minimum="0.1" Value="1" ValueChanged="doubleUpDownOutlineThickness_ValueChanged" Maximum="20" Increment="0.1" FormatString="0.0"/>
                    <Label Content="px" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Center" Padding="0" Margin="5,0"/>
                </Grid>
            </Grid>
        </GroupBox>
        <GroupBox HorizontalAlignment="Left" Margin="365,162,0,0" VerticalAlignment="Top" Height="153" Width="200">
            <GroupBox.Header>
                <CheckBox x:Name="checkBoxScrolling" Content="Scrolling" Checked="checkBoxScrolling_CheckedChanged" Unchecked="checkBoxScrolling_CheckedChanged"/>
            </GroupBox.Header>
            <Grid IsEnabled="{Binding IsChecked, ElementName=checkBoxScrolling}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Label Content="Speed:" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                <Grid Grid.Column="1" Margin="5,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <xctk:IntegerUpDown x:Name="integerUpDownScrollingSpeed" VerticalAlignment="Center" Margin="0" Value="5" ValueChanged="integerUpDownScrollingSpeed_ValueChanged" Minimum="1"/>
                    <Label Content="px/sec" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Center" Padding="0" Margin="5,0"/>
                </Grid>
                <Label Content="Delimiter:" Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                <TextBox x:Name="textBoxScrollingDelimiter" Grid.Column="1" Grid.Row="1" VerticalAlignment="Center" Margin="5,0" Text=" - " TextChanged="textBoxScrollingDelimiter_TextChanged"/>
                <Label Content="Max width:" Grid.Row="2" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                <Grid Grid.Row="2" Grid.Column="1" Margin="5,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <xctk:IntegerUpDown x:Name="integerUpDownScrollingMaxWidth" VerticalAlignment="Center" Margin="0" Minimum="1" Value="250" ValueChanged="integerUpDownScrollingMaxWidth_ValueChanged"/>
                    <Label Content="px" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Center" Padding="0" Margin="5,0"/>
                </Grid>
                <Label Content="Text align:" Grid.Row="3" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                <ComboBox x:Name="comboBoxScrollingAlign" Grid.Column="1" Grid.Row="3" VerticalAlignment="Center" Margin="5,0" SelectedIndex="1" SelectedValuePath="Content" SelectionChanged="comboBoxScrollingAlign_SelectionChanged">
                    <ComboBoxItem Content="Left"/>
                    <ComboBoxItem Content="Center"/>
                    <ComboBoxItem Content="Right"/>
                </ComboBox>
                <CheckBox x:Name="checkBoxScrollingLargeOnly" Grid.Row="4" Grid.ColumnSpan="2" VerticalAlignment="Center" Content="Scroll only when text is too large" Margin="0,3" IsChecked="True" Checked="checkBoxScrollingLargeOnly_CheckedChanged" Unchecked="checkBoxScrollingLargeOnly_CheckedChanged"/>
            </Grid>
        </GroupBox>

        <GroupBox Header="Preview" HorizontalAlignment="Left" Margin="10,214,0,0" VerticalAlignment="Top" Height="101" Width="350">
            <Image x:Name="imagePreview" Stretch="None" VerticalAlignment="Center" HorizontalAlignment="{Binding SelectedValue, ElementName=comboBoxScrollingAlign}"/>
        </GroupBox>
        <TextBlock x:Name="textBlockVersionInfo" Margin="10,0,170,13" TextWrapping="Wrap" Text="Version and new release information should be placed here automatically" VerticalAlignment="Bottom"/>
    </Grid>
</Window>
